version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        VARIANT: 16-bullseye
    volumes:
      - ..:/workspace:cached
    environment:
      # temporal settings
      TEMPORAL_ADDR: temporal:7233
      
      # email settings
      EMAIL_PROVIDER: mailhog
      # mailhog settings
      MAILHOG_HOST: mailhog
      MAILHOG_PORT: 1025

    command: sleep infinity
    networks:
      - app-network
    ports:
      - 3000:3000
    user: node
    depends_on:
      - postgresql
      - mailhog

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - 8025:8025

  postgresql:
    image: postgres:13
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: dev
    networks:
      - app-network
    ports:
      - 5432:5432

  temporal:
    container_name: temporal
    depends_on:
      - postgresql
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=postgres
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
    image: temporalio/auto-setup:1.14.2
    networks:
        - app-network
    ports:
      - 7233:7233
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig

  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.14.2
    networks:
      - app-network
    stdin_open: true
    tty: true

  temporal-web:
    container_name: temporal-web
    depends_on:
      - temporal
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal:7233
      - TEMPORAL_PERMIT_WRITE_API=true
    image: temporalio/web:1.13.0
    networks:
      - app-network
    ports:
      - 8088:8088

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
    name: app-network